name: python
on:
  push:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.11"]
    defaults:
      run:
        working-directory: python
    
    steps:
      - uses: actions/checkout@v3
      - name: setup
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: install
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ci_requirements.txt
      - name: test
        run: |
          pytest --cov=covertable --cov-report=xml
      - name: codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          verbose: true

  release:
    needs: tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    if: github.ref == 'refs/heads/master'
    name: pypi upload
    steps:
      - uses: actions/checkout@v3
      - name: setup
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: install
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r  ci_requirements.txt
      - name: build
        run: |
          python -m build --sdist --wheel --outdir dist/ .
      - name: Upload
        run: |
          ls -la
          ls -la dist
          pwd
          twine upload dist/* --non-interactive --skip-existing
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: upload
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          package: dist/*
          skip_existing: true
